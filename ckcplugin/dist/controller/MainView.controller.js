sap.ui.define(["dongkuk/custom/plugin/ckcplugin/controller/BaseController","dongkuk/custom/plugin/ckcplugin/data/apiStorageLocations","dongkuk/custom/plugin/ckcplugin/data/apiInventories","sap/ui/model/json/JSONModel","sap/m/MessageToast"],function(e,t,o,n,i){"use strict";let a={};let s={get_sfcDetails:"sfc/v1/sfcdetail",get_inventories:"inventory/v1/inventories",get_storageLocations:"inventory/v1/storageLocations",post_inventoriesTransfer:"inventory/v1/inventories/transfer"};return e.extend("dongkuk.custom.plugin.ckcplugin.controller.MainView",{onInit:function(){e.prototype.onInit.apply(this,arguments);a=this._getConfiguration();var o=new n;console.log("api call start");this.get(s.get_storageLocations,{plant:this.getPlant()}).then(e=>{i.show("storageLocations 조회 성공");console.log("storageLocations api call 성공");o.setData(e);this.getView().setModel(o,"apiStorageLocations");console.log(e)}).catch(e=>{i.show(e.message);console.log("storageLocations api call 실패 -> JSON file read");o=new n(t);this.getView().setModel(o,"apiStorageLocations");console.log(o)});console.log("api call end")},onBeforeRenderingPlugin:function(){},onAfterRendering:function(){},onAfterPodConfigsLoad:function(e){},isSubscribingToNotifications:function(){var e=false;return e},getCustomNotificationEvents:function(e){},getNotificationMessageHandler:function(e){return null},_handleNotificationMessage:function(e){var t="Message not found in payload 'message' property";if(e&&e.parameters&&e.parameters.length>0){for(var o=0;o<e.parameters.length;o++){switch(e.parameters[o].name){case"template":break;case"template2":}}}},onBackButtonPress:function(e){i.show("Back Button Pressed!")},onClickAlertButton:function(e){},onRadioButtonASelect:function(e){console.log("onRadioButtonASelect click!!")},onClickMoveButton:function(e){console.log("onClickMoveButton click!!");var t=this.getView().getModel("apiInventories");var o=t.getProperty("/content");var n=this.getView().byId("testTable");var i=n.getItems();var a=-1;i.forEach(function(e,t){var o=e.getCells()[0];if(o.getSelected()){a=t}});this.post(s.post_inventoriesTransfer,{plant:this.getPlant(),inventoryId:o[a].inventoryId,lastModifiedDateTime:o[a].modifiedDateTime,quantity:{unitOfMeasure:{internalUnitOfMeasure:o[a].quantityOnHand.unitOfMeasure.internalUnitOfMeasure},value:o[a].quantityOnHand.value},storageLocation:this.getView().byId("transLocId").getValue()}).then(e=>{console.log(JSON.stringify(e))}).catch(e=>{console.log(JSON.stringify(e))});console.log("post api 처리완료")},onSelectCombo:function(e){i.show(e.getSource().getSelectedKey());var t=new n;console.log("api call start");this.get(s.get_inventories,{plant:this.getPlant(),storageLocation:e.getSource().getSelectedKey()}).then(e=>{console.log("inventories api call 성공");t.setData(e);this.getView().setModel(t,"apiInventories");console.log(e)}).catch(e=>{console.log("inventories api call 실패 -> JSON file read");t=new n(o);this.getView().setModel(t,"apiInventories");console.log(t)});console.log("api call end")},onExit:function(){e.prototype.onExit.apply(this,arguments)}})});
//# sourceMappingURL=MainView.controller.js.map